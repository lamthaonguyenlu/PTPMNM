using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.IO;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApplication3
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        //public TextBox txt = new TextBox();
        public TextBox[,] btn =new TextBox[9,9];
        private void Form1_Load(object sender, EventArgs e)
        {
            load();            
        }
        public void reload()
        {
            try
            {
                int so = 0;
                for (int i = 0; i < 9; i++)
                {
                    for (int j = 0; j < 9; j++)
                    {
                        int schu = (panel1.Height - 4) / 9;
                        if (schu >= 60) Mau.Font = new System.Drawing.Font("Arial", 40F);
                        if (schu < 60 && schu >= 50) Mau.Font = new System.Drawing.Font("Arial", 30F);
                        if (schu < 50 && schu >= 40) Mau.Font = new System.Drawing.Font("Arial", 25F);
                        if (schu < 40 && schu >= 30) Mau.Font = new System.Drawing.Font("Arial", 18F);

                        btn[i, j] = new TextBox();
                        btn[i, j].Name = i.ToString() + j.ToString();
                        btn[i, j].Text = "";
                        btn[i, j].Font = Mau.Font;
                        btn[i, j].BackColor = Color.White;//Gainsboro;
                        btn[i, j].TextAlign = Mau.TextAlign;
                        
                        int a = (panel1.Width - 4) / 9;
                        int b = (panel1.Height - 4) / 9;
                        int c = (panel1.Width - ((panel1.Width - 4) / 9) * 9) / 2;
                        int d = (panel1.Height - ((panel1.Height - 4) / 9) * 9) / 2;
                        btn[i, j].Font = Mau.Font;
                        btn[i, j].Multiline = true;
                        btn[i, j].Width = a;
                        btn[i, j].Height = b;
                        if (i != 0 && j != 0 && i % 3 == 0 && j % 3 == 0)
                            btn[i, j].Location = new Point((j * a /*40*/) + c, (i * b/*32*/) + d);
                        else
                            if (i % 3 == 0 && i != 0)
                            btn[i, j].Location = new Point((j * a/*40*/), (i * b /*32*/) + d);
                        else if (j % 3 == 0 && j != 0)
                            btn[i, j].Location = new Point((j * a/*40*/) + c, (i * b /*32*/));
                        else
                            btn[i, j].Location = new Point((j * a/*40*/), (i * b /*32*/));

                        //btn.Click += new EventHandler(btn_Click);
                        //btn.TextChanged+=new EventHandler(Mau_TextChanged);
                        btn[i, j].KeyPress += new KeyPressEventHandler(Mau_KeyPress);
                        //btn.Enter += new EventHandler(this.Mau_Enter);
                        btn[i, j].Tag = so;
                        btn[i, j].MaxLength = 1;
                        panel1.Controls.Add(btn[i, j]);
                        so = so + 1;
                    }
                }
            }
            catch (Exception)
            {
                MessageBox.Show("Lỗi load panel!!!");
            }
        }
        public void load()
        {
            try
            {
                int so = 0;
                for (int i = 0; i < 9; i++)
                {
                    for (int j = 0; j < 9; j++)
                    {
                        //int a= (panel1.Width - 4) / 9;
                        //int b= (panel1.Height - 4) / 9;
                        //int c = 2;
                        btn[i,j] = new TextBox();
                        btn[i,j].Name = i.ToString() + j.ToString();
                        btn[i,j].Text = "";
                        btn[i,j].Font = new System.Drawing.Font("Arial", 16F);
                        btn[i, j].TextAlign = Mau.TextAlign;
                        //btn[so].
                        //btn.FlatStyle = FlatStyle.Flat;
                        btn[i, j].BackColor = Color.White;//Gainsboro;
                        btn[i,j].TextAlign = Mau.TextAlign;
                        //btn.FlatAppearance.BorderColor = Color.Black;
                        //btn[so].Enabled = false;
                        //btn[so].Multiline = true;
                        //btn[so].Width = a;
                        //btn[so].Height = b;
                        btn[i,j].Size = new System.Drawing.Size(40, 40);
                        //btn[so].Size = new System.Drawing.Size((panel1.Width-2)/9, (panel1.Height-2)/9);
                        if (i != 0 && j != 0 && i % 3 == 0 && j % 3 == 0)
                            btn[i,j].Location = new Point((j * 40) + 1, (i *32) + 1);
                        else
                            if (i % 3 == 0 && i != 0)
                            btn[i,j].Location = new Point((j * 40), (i * 32) + 1);
                        else if (j % 3 == 0 && j != 0)
                            btn[i,j].Location = new Point((j * 40) + 1, (i * 32));
                        else
                            btn[i,j].Location = new Point((j * 40), (i * 32));

                        //btn.Click += new EventHandler(btn_Click);
                        //btn.TextChanged+=new EventHandler(Mau_TextChanged);
                        btn[i,j].KeyPress += new KeyPressEventHandler(Mau_KeyPress);
                        //btn.Enter += new EventHandler(this.Mau_Enter);
                        btn[i,j].Tag = so;
                        btn[i,j].MaxLength = 1;
                        panel1.Controls.Add(btn[i,j]);
                        so = so + 1;
                    }
                }
            }
            catch(Exception)
            {
                MessageBox.Show("Lỗi load panel!!!");
            }
        }
        //void btn_Click(object sender, EventArgs e)
        //{
        //    TextBox btn = (sender as TextBox);
        //    string str = btn.Text;
        //    for (int y = 0; y < 9; y++)
        //    {
        //        for (int x = 0; x < 9; x++)
        //        {
        //            TextBox b = (TextBox)panel1.Controls[y.ToString() + x.ToString()];
        //            if (str != "" && b.Text == str)
        //            {
        //                b.BackColor = Color.Yellow;
        //            }
        //            else
        //            {
        //                b.BackColor = Color.Gainsboro;
        //            }
        //        }
        //    }

        //}
        int[,] GridUI;
        Sudoku sudoku;
        private void toolStripButton1_Click(object sender, EventArgs e)
        {
            try
            {
                dtS = DateTime.Now;
                panel1.Controls.Clear();
                reload();
                OpenFileDialog dlg = new OpenFileDialog();
                dlg.Filter = "Text Files|*.txt";
                Random rd = new Random();
                int so = rd.Next(1, 7);
                string ten = so.ToString() + ".txt";
                dlg.FileName = ten;
                
                sudoku = new Sudoku(dlg.FileName);
                GridUI = (int[,])sudoku.Grid.Clone();
                Draw(GridUI);

            }
            catch (Exception)
            {
                MessageBox.Show("Thao tác thất bại!");
            }
            
        }
        private void Draw(int[,] g)
        {
            for (int i = 0; i < 9; i++)
            {
                for (int j = 0; j < 9; j++)
                {
                    TextBox btn = (TextBox)panel1.Controls[i.ToString() + j.ToString()];
                    if (g[i, j] == 0)
                        btn.Text = "";
                    else
                    {
                        btn.Text = g[i, j].ToString();
                        btn.ReadOnly = true;
                        btn.BackColor = Color.LightBlue;// MediumAquamarine;
                    }
                    btn.Enabled = true;
                    if (GridUI[i, j] != g[i, j])
                    {
                        btn.ForeColor = Color.Red;
                    }
                    else
                    {
                        btn.ForeColor = Color.Black;
                    }
                }
            }
        }
        List<int[,]> lstSol;
        int idx;
        DateTime dtS;
        DateTime dtE;
        private void toolStripButton3_Click(object sender, EventArgs e)
        {
            try
            {
                
                Point p = sudoku.findPosition();
                if (sudoku.BackTrack(p))
                {
                    idx = 0;
                    lstSol = sudoku.lstSolution;
                    MessageBox.Show("Số trạng thái: " + lstSol.Count.ToString());
                    dtS = DateTime.Now;
                    timer1.Start();
                }
            }
            catch(Exception)
            {
                MessageBox.Show("Thao tác thất bại!");
            }
            
        }

        //public bool isDiff(int[,] a, int[,] b)
        //{
        //    for (int y = 0; y < 9; y++)
        //    {
        //        for (int x = 0; x < 9; x++)
        //        {
        //            if (a[y, x] != b[y, x])
        //                return true;
        //        }
        //    }
        //    return false;
        //}
        
        
        
        private void toolStripButton4_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Điền đầy đủ các số từ 0~9 vào ô trống cho : \n\tTất cả các hàng :\n\tTất cả các cột : \n\tTất cả các vùng 3x3\nChỉ được điền một ô một số mà thôi !", "Sudoku", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private void Mau_KeyPress(object sender, KeyPressEventArgs e)
        {
            //if (e.KeyChar == ' ')
            //{
            //    ((TextBox)sender).Text = "";
            //    ((TextBox)sender).ForeColor = Color.Black;
            //    ((TextBox)sender).BackColor = Color.White;
            //}
            if (e.KeyChar > '9' || e.KeyChar < '1')
            {
                e.KeyChar = '\0';


            }
        }

        //private void Mau_Enter(object sender, EventArgs e)
        //{
        //    //int i = int.Parse(((TextBox)sender).Tag.ToString());
        //    //int r = (i - 1) / 9 + 1;
        //    //int c = (i - 1) % 9 + 1;
        //}

        private void timer1_Tick_1(object sender, EventArgs e)
        {
            if (idx == lstSol.Count)
            {
                timer1.Stop();
                dtE = DateTime.Now;
                MessageBox.Show("Số giây giải: " + (dtE - dtS).TotalSeconds.ToString());
                return;
            }
            Draw(lstSol[idx]);
            idx++;
        }

        private void toolStripButton2_Click(object sender, EventArgs e)
        {

        }

        private void toolStripButton5_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Niên luận 1\nGame sudoku bằng phương pháp quay lui");
        }

        private void label1_Click(object sender, EventArgs e)
        {

        }

        


        private void Form1_Resize(object sender, EventArgs e)
        {
            try
            {

                int schu= (panel1.Height - 4) / 9;
                if(schu>=60) Mau.Font = new System.Drawing.Font("Arial", 40F);
                if(schu<60&&schu>=50) Mau.Font = new System.Drawing.Font("Arial", 30F);
                if(schu<50&&schu>=40) Mau.Font = new System.Drawing.Font("Arial", 25F);
                if(schu<40&&schu>=30) Mau.Font = new System.Drawing.Font("Arial", 18F);

                for (int i = 0; i < 9; i++)
                {
                    for (int j = 0; j < 9; j++)
                    {
                        int a = (panel1.Width - 4) / 9;
                        int b = (panel1.Height - 4) / 9;
                        int c = (panel1.Width - ((panel1.Width - 4) / 9) * 9) / 2;
                        int d = (panel1.Height - ((panel1.Height - 4) / 9) * 9) / 2; btn[i,j].Font = new System.Drawing.Font("Arial", 16F);
                        //btn[so].
                        //btn.FlatStyle = FlatStyle.Flat;
                        //btn.FlatAppearance.BorderColor = Color.Black;
                        //btn[so].Enabled = false;
                        btn[i,j].Font = Mau.Font;

                        btn[i,j].Multiline = true;
                        btn[i,j].Width = a;
                        btn[i,j].Height = b;
                        //btn[so].Size = new System.Drawing.Size(40, 40);
                        //btn[so].Size = new System.Drawing.Size((panel1.Width-2)/9, (panel1.Height-2)/9);
                        if (i != 0 && j != 0 && i % 3 == 0 && j % 3 == 0)
                            btn[i, j].Location = new Point((j * a /*40*/) + c, (i * b/*32*/) + d);
                        else
                            if (i % 3 == 0 && i != 0)
                            btn[i, j].Location = new Point((j * a/*40*/), (i * b /*32*/) + d);
                        else if (j % 3 == 0 && j != 0)
                            btn[i, j].Location = new Point((j * a/*40*/) + c, (i * b /*32*/));
                        else
                            btn[i, j].Location = new Point((j * a/*40*/), (i * b /*32*/));
                    }
                }
            }
            catch (Exception)
            {
                MessageBox.Show("Lỗi load panel!!!");
            }
        }

        private void toolStripLabel3_Click(object sender, EventArgs e)
        {

        }

        private void toolStrip2_ItemClicked(object sender, ToolStripItemClickedEventArgs e)
        {

        }

        private void toolStripButton2_Click_1(object sender, EventArgs e)
        {
            try
            {
                dtE = DateTime.Now;
                int trong = 0;
                for (int i = 0; i < 9; i++)
                    for (int j = 0; j < 9; j++)
                        if (btn[i, j].Text.Trim() == string.Empty)
                            trong = trong + 1;
                if (trong == 0)
                {
                    int trung = 0;
                    for(int i=0;i<9;i++)
                        for(int j = 0; j < 9; j++)
                            for(int y = 0; y < 9; y++)
                            {
                                int s = int.Parse(btn[i, j].Text);
                                int si = int.Parse(btn[y,j].Text);
                                int sj = int.Parse(btn[i, y].Text);
                                if (i != y && s == si) trung = trung + 1;
                                if (j != y && s == sj) trung = trung + 1;
                            }
                    if (trung == 0)
                    {
                        MessageBox.Show("Bạn đã giải thành công\nTrong "+ (dtE - dtS).TotalSeconds.ToString()+"s");
                    }
                    else MessageBox.Show("Đáp án chưa chính xác!");
                }
                else MessageBox.Show("Vẫn còn " + trong + " ô trống!!");
            }
            catch(Exception)
            {
                MessageBox.Show("Thao tác thất bại!");
            }
        }
        private void toolStripButton5_Click_1(object sender, EventArgs e)
        {
            try
            {
                dtS = DateTime.Now;
                panel1.Controls.Clear();
                reload();
                OpenFileDialog dlg = new OpenFileDialog();
                dlg.Filter = "Text Files|*.txt";
                dlg.FileName = "8.txt";
                sudoku = new Sudoku(dlg.FileName);
                GridUI = (int[,])sudoku.Grid.Clone();
                Draw(GridUI);

            }
            catch (Exception)
            {
                MessageBox.Show("Thao tác thất bại!");
            }
        }
        private void toolStripButton6_Click(object sender, EventArgs e)
        {
            Mau.Font = new System.Drawing.Font("Arial", 36F);

        }
    }
}
